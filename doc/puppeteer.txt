*puppeteer.txt*         For NVIM v0.8.0         Last change: 2023 September 18

==============================================================================
Table of Contents                                *puppeteer-table-of-contents*

1. nvim-puppeteer                                  |puppeteer-nvim-puppeteer-|
  - Features                              |puppeteer-nvim-puppeteer--features|
  - Installation                      |puppeteer-nvim-puppeteer--installation|
  - Credits                                |puppeteer-nvim-puppeteer--credits|

==============================================================================
1. nvim-puppeteer                                  *puppeteer-nvim-puppeteer-*



Automatically convert strings to f-strings or template strings and back.

- |puppeteer-features|
- |puppeteer-installation|
- |puppeteer-credits|


FEATURES                                  *puppeteer-nvim-puppeteer--features*

- When typing `{}` in a python string, automatically convert it to a f-string.
- When typing `${}` in a javascript or typescript string, automatically convert it to a template string.
- When _removing_ the `{}` or `${}`, automatically convert it back to a string.
- Also works with multi-line strings.
- No configuration needed, just install and you are ready to go.


INSTALLATION                          *puppeteer-nvim-puppeteer--installation*

>lua
    -- lazy.nvim
    { 
        "chrisgrieser/nvim-puppeteer",
        dependencies = "nvim-treesitter/nvim-treesitter",
        ft = { "python", "javascript", "typescript" },
    },
    
    -- packer
    use {
        "chrisgrieser/nvim-puppeteer",
        requires = "nvim-treesitter/nvim-treesitter",
    }
<

No configuration or `.setup()` call required. The plugin already automatically
loads as little as possible.


CREDITS                                    *puppeteer-nvim-puppeteer--credits*

**About Me** In my day job, I am a sociologist studying the social mechanisms
underlying the digital economy. For my PhD project, I investigate the
governance of the app economy and how software ecosystems manage the tension
between innovation and compatibility. If you are interested in this subject,
feel free to get in touch.

**Blog** I also occasionally blog about vim: Nano Tips for Vim
<https://nanotipsforvim.prose.sh>

**Profiles** - reddit <https://www.reddit.com/user/pseudometapseudo> - Discord
<https://discordapp.com/users/462774483044794368/> - Academic Website
<https://chris-grieser.de/> - Twitter <https://twitter.com/pseudo_meta> -
Mastodon <https://pkm.social/@pseudometa> - ResearchGate
<https://www.researchgate.net/profile/Christopher-Grieser> - LinkedIn
<https://www.linkedin.com/in/christopher-grieser-ba693b17a/>

**Buy Me a Coffee**

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
